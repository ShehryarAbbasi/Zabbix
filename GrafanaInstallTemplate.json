{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This is template deploys a Grafana server in an existing VPC environment.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPCID",
            "PrivateSubnetID1",
            "PrivateSubnetID2",
            "PublicSubnetID"
          ]
        },
        {
          "Label": {
            "default": "Amazon Custom EC2 Configuration"
          },
          "Parameters": [
            "KeyPairName",
            "GrafanaAMIOS",
            "GrafanaInstanceType",
            "GrafanaServerName"
          ]
        },
        {
          "Label": {
            "default": "Grafana Mysql/Aurora Database Configuration"
          },
          "Parameters": [
            "DomainName",
            "MasterUser",
            "MasterPassword",
            "GrafanaDatabaseType"
          ]
        },
        {
          "Label": {
            "default": "AWS QS Configuration"
          },
          "Parameters": [
            "QSS3BucketName",
            "QSS3KeyPrefix"
          ]
        }
      ],
      "ParameterLabels": {
        "GrafanaServerName": {
          "default": "DNS/Tag Name for Server"
        },
        "MasterPassword": {
          "default": "Grafana Database Master Password"
        },
        "MasterUser": {
          "default": "Grafana Database Master User"
        },
        "DomainName": {
          "default": "Domain Name"
        },
        "GrafanaInstanceType": {
          "default": "Grafana Custom Instance Type"
        },
        "PrivateSubnetID1": {
          "default": "Private Subnet ID1"
        },
        "PrivateSubnetID2": {
          "default": "Private Subnet ID2"
        },
        "PublicSubnetID": {
          "default": "Public Subnet ID"
        },
        "QSS3BucketName": {
          "default": "Quick Start S3 Bucket Name"
        },
        "QSS3KeyPrefix": {
          "default": "Quick Start S3 Key Prefix"
        },
        "VPCID": {
          "default": "VPC ID"
        },
        "GrafanaAMIOS": {
          "default": "Grafana Operating System"
        },
        "GrafanaDatabaseType": {
          "default": "Grafana Database Engine Type"
        }
      }
    }
  },
  "Parameters": {
    "MasterPassword": {
      "AllowedPattern": "([A-Za-z0-9_!@#$%^&*-.]{3,50})",
      "ConstraintDescription": "Input your database Password, Min 3, Maximum of 30 characters.",
      "Description": "Enter your Database Password, Min 8, maximum of 30 characters. This password is used for the admin user of Grafana Database.",
      "NoEcho": "true",
      "Type": "String",
      "Default": "dgGGk.juki78$$"
    },
    "MasterUser": {
      "AllowedPattern": "([A-Za-z0-9]{3,50})",
      "ConstraintDescription": "Input your database UserName, Min 3, Maximum of 30 characters.",
      "Description": "Enter your Database Master UserName, Min 8, maximum of 30 characters. This user is used for the admin user of Grafana Sqllite/Aurora Database.",
      "Type": "String",
      "Default": "Grafana"
    },
    "DomainName": {
      "ConstraintDescription": "String domain name.",
      "Default": "graph",
      "Description": "Name of Private Route53 Domain to reach your Grafana Endpoint after setup.",
      "Type": "String"
    },
    "KeyPairName": {
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "GrafanaInstanceType": {
      "AllowedValues": [
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.8xlarge",
        "r4.16xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type.",
      "Default": "m3.2xlarge",
      "Description": "Choose your Custom Instance type for Grafana Server",
      "Type": "String"
    },
    "GrafanaDatabaseType": {
      "AllowedValues": [
        "AuroraRDSCluster",
        "Localsqlite3"
      ],
      "ConstraintDescription": "Must be a valid Database Engine type.",
      "Default": "Localsqlite3",
      "Description": "Choose your Database Engine type for Grafana Server",
      "Type": "String"
    },
    "PrivateSubnetID1": {
      "Description": "ID of the private subnet aka Availability Zone needed for Grafana Server and DBSubnet(e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnetID2": {
      "Description": "ID of the private subnet aka Availability Zone needed for DBSubnet(e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnetID": {
      "Description": "ID of the public subnet aka Availability Zone for the LoadBalancer(e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Default": "quickstart-reference-as",
      "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Type": "String"
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
      "Default": "zabbixgrafana/setup/latest",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
      "Type": "String"
    },
    "VPCID": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Default": "vpc-77e23811",
      "Type": "AWS::EC2::VPC::Id"
    },
    "GrafanaAMIOS": {
      "AllowedValues": [
        "RHEL72HVM"
      ],
      "Default": "RHEL72HVM",
      "Description": "Operating system and version for Grafana Server.",
      "Type": "String"
    },
    "GrafanaServerName": {
      "AllowedPattern": "([A-Za-z0-9_]{3,50})",
      "Default": "Grafana",
      "Description": "Name for EC2 Instance/Tag.",
      "Type": "String"
    }
  },
  "Conditions": {
    "IsAZLinux": {
      "Fn::Equals": [
        {
          "Ref": "GrafanaAMIOS"
        },
        "AmazonLinux"
      ]
    },
    "UseAuroraRDS": {
      "Fn::Equals": [
        {
          "Ref": "GrafanaDatabaseType"
        },
        "AuroraRDSCluster"
      ]
    },
    "UseLocalsqlite3": {
      "Fn::Equals": [
        {
          "Ref": "GrafanaDatabaseType"
        },
        "Localsqlite3"
      ]
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberIn": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Fn::RefAll": "AWS::EC2::VPC::Id"
              }
            ]
          },
          "AssertDescription": "All subnets must in the VPC"
        }
      ]
    },
    "PrivateandPublicSameAZ": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Fn::ValueOf": [
                  "PrivateSubnetID1",
                  "AvailabilityZone"
                ]
              },
              {
                "Fn::ValueOf": [
                  "PublicSubnetID",
                  "AvailabilityZone"
                ]
              }
            ]
          },
          "AssertDescription": "Must have the ELB (PublicSubnetED) in the same AZ as the PrivateSubnetID1."
        }
      ]
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "RHEL72HVM": "RHEL-7.2_HVM-20161025-x86_64-1-Hourly2-GP2"
      },
      "ap-northeast-1": {
        "RHEL72HVM": "ami-2265c543"
      },
      "ap-northeast-2": {
        "RHEL72HVM": "ami-a9e532c7"
      },
      "ap-south-1": {
        "RHEL72HVM": "ami-917205fe"
      },
      "ap-southeast-1": {
        "RHEL72HVM": "ami-22953841"
      },
      "ap-southeast-2": {
        "RHEL72HVM": "ami-91cdf0f2"
      },
      "eu-central-1": {
        "RHEL72HVM": "ami-7def1712"
      },
      "eu-west-1": {
        "RHEL72HVM": "ami-b22961c1"
      },
      "sa-east-1": {
        "RHEL72HVM": "ami-28f66a44"
      },
      "us-east-1": {
        "RHEL72HVM": "ami-873e6190"
      },
      "us-east-2": {
        "RHEL72HVM": "ami-873e6190"
      },
      "us-west-1": {
        "RHEL72HVM": "ami-f88fc498"
      },
      "us-west-2": {
        "RHEL72HVM": "ami-5dd3743d"
      }
    },
    "AWSInfoRegionMap": {
      "ap-northeast-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-northeast-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-south-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-southeast-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-southeast-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "eu-central-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "eu-west-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "sa-east-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-east-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-east-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-gov-west-1": {
        "Partition": "aws-us-gov",
        "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
      },
      "us-west-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-west-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      }
    },
    "GrafanaAMINameMap": {
      "RHEL72HVM": {
        "Code": "RHEL72HVM",
        "repo": ""
      },
      "AZLinux": {
        "Code": "AZLinux",
        "repo": ""
      }
    }
  },
  "Resources": {
    "Route53PrivateHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": "Private Hosted Zone for Grafana Domain"
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "DomainName"
              },
              "."
            ]
          ]
        },
        "VPCs": [
          {
            "VPCId": {
              "Ref": "VPCID"
            },
            "VPCRegion": {
              "Ref": "AWS::Region"
            }
          }
        ]
      }
    },
    "Route53RecordSetGrafanaSqlite3": {
      "Type": "AWS::Route53::RecordSet",
      "Condition": "UseLocalsqlite3",
      "Properties": {
        "HostedZoneId": {
          "Ref": "Route53PrivateHostedZone"
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "GrafanaServerName"
              },
              ".",
              {
                "Ref": "DomainName"
              },
              "."
            ]
          ]
        },
        "Type": "A",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "GrafanaSqlite3Instance",
              "PrivateIp"
            ]
          }
        ],
        "TTL": "60"
      }
    },
    "Route53RecordSetGrafanaAurora": {
      "Type": "AWS::Route53::RecordSet",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "HostedZoneId": {
          "Ref": "Route53PrivateHostedZone"
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "GrafanaServerName"
              },
              ".",
              {
                "Ref": "DomainName"
              },
              "."
            ]
          ]
        },
        "Type": "A",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "GrafanaAuroraInstance",
              "PrivateIp"
            ]
          }
        ],
        "TTL": "60"
      }
    },
    "InstanceRoleGrafana": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "InstanceProfileGrafana": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRoleGrafana"
          }
        ]
      }
    },
    "GrafanaServerAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupName": "Grafana Server Access Security Group",
        "GroupDescription": "Instances with management access to Grafana server"
      }
    },
    "GrafanaServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupName": "Grafana Server Security Group",
        "GroupDescription": "Grafana server management and access ports",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": {
              "Ref": "GrafanaServerAccessSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "ToPort": "3000",
            "SourceSecurityGroupId": {
              "Ref": "GrafanaELBSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "SourceSecurityGroupId": {
              "Ref": "GrafanaELBSecurityGroup"
            }
          }
        ]
      }
    }
    "GrafanaELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupName": "Grafana ELB Security Group",
        "GroupDescription": "Grafana ELB http, https communication and management ports",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "GrafanaDBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "Grafana RDS inter-server communication and management ports",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Ref": "GrafanaServerSecurityGroup"
            }
          }
        ]
      }
    },
    "GrafanaSqlite3LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "UseLocalsqlite3",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "GrafanaELBSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "PublicSubnetID"
          }
        ],
        "Instances": [
          {
            "Ref": "GrafanaSqlite3Instance"
          }
        ],
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "3000",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "TCP:80",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },
    "GrafanaAuroraLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "GrafanaELBSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "PublicSubnetID"
          }
        ],
        "Instances": [
          {
            "Ref": "GrafanaAuroraInstance"
          }
        ],
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "3000",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "TCP:80",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },
    "GrafanaDBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "MasterUsername": {
          "Ref": "MasterUser"
        },
        "MasterUserPassword": {
          "Ref": "MasterPassword"
        },
        "Engine": "aurora",
        "DBSubnetGroupName": {
          "Ref": "GrafanaDBSubnetGroup"
        },
        "DBClusterParameterGroupName": {
          "Ref": "GrafanaDBClusterParameterGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Ref": "GrafanaDBSecurityGroup"
          }
        ]
      },
      "DeletionPolicy": "Snapshot"
    },
    "GrafanaDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "DBSubnetGroupDescription": "description",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnetID1"
          },
          {
            "Ref": "PrivateSubnetID2"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Grafana DB Subnet Group"
          }
        ]
      }
    },
    "GrafanaDBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "DBInstanceClass": "db.r3.large",
        "Engine": "aurora",
        "DBSubnetGroupName": {
          "Ref": "GrafanaDBSubnetGroup"
        },
        "DBParameterGroupName": {
          "Ref": "GrafanaDBParameterGroup"
        },
        "DBClusterIdentifier": {
          "Ref": "GrafanaDBCluster"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Grafana Aurora Database"
          }
        ]
      }
    },
    "GrafanaDBClusterParameterGroup": {
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "Description": "Grafana Aurora Cluster Parameter Group",
        "Family": "aurora5.6",
        "Parameters": {
          "time_zone": "America/Denver"
        }
      }
    },
    "GrafanaDBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Condition": "UseAuroraRDS",
      "Properties": {
        "Description": "Grafana Aurora Parameter Group",
        "Family": "aurora5.6",
        "Parameters": {
          "sql_mode": "IGNORE_SPACE"
        }
      }
    },
    "GrafanaSqlite3Instance": {
      "Type": "AWS::EC2::Instance",
      "Condition": "UseLocalsqlite3",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/tmp/Grafana-setup.txt": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "QuickStartS3URL|",
                      {
                        "Fn::FindInMap": [
                          "AWSInfoRegionMap",
                          {
                            "Ref": "AWS::Region"
                          },
                          "QuickStartS3URL"
                        ]
                      },
                      "\n",
                      "QSS3BucketName|",
                      {
                        "Ref": "QSS3BucketName"
                      },
                      "\n",
                      "QSS3KeyPrefix|",
                      {
                        "Ref": "QSS3KeyPrefix"
                      },
                      "\n",
                      "DatabasePass|",
                      {
                        "Ref": "MasterPassword"
                      },
                      "\n",
                      "DatabaseUser|",
                      {
                        "Ref": "MasterUser"
                      },
                      "\n",
                      "DBConnString|NA",
                      "\n"
                    ]
                  ]
                },
                "mode": "000440",
                "owner": "root",
                "group": "root"
              },
              "/tmp/bootstrapGrafana.sh": {
                "source": {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::FindInMap": [
                          "AWSInfoRegionMap",
                          {
                            "Ref": "AWS::Region"
                          },
                          "QuickStartS3URL"
                        ]
                      },
                      {
                        "Ref": "QSS3BucketName"
                      },
                      {
                        "Ref": "QSS3KeyPrefix"
                      },
                      "Scripts/bootstrapGrafana.sh"
                    ]
                  ]
                },
                "mode": "000777",
                "owner": "root",
                "group": "root"
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "InstanceProfileGrafana"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "GrafanaAMINameMap",
                {
                  "Ref": "GrafanaAMIOS"
                },
                "Code"
              ]
            }
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "GrafanaServerSecurityGroup"
          },
          {
            "Ref": "GrafanaAgentsSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PrivateSubnetID1"
        },
        "InstanceType": {
          "Ref": "GrafanaInstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash \n",
                "cd /tmp \n",
                "curl -O https://bootstrap.pypa.io/get-pip.py\n",
                "python get-pip.py\n",
                "echo DEBUGPipInstalled &> /tmp/bootstrap.log\n",
                "pip install awscli\n",
                "curl -O https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                "gunzip aws-cfn-bootstrap-latest.tar.gz\n",
                "tar -xvf aws-cfn-bootstrap-latest.tar\n",
                "cd aws-cfn-bootstrap*\n",
                "python setup.py build\n",
                "python setup.py install\n",
                "yum install -y zip\n",
                "yum install -y unzip\n",
                "/usr/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource GrafanaSqlite3Instance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "/tmp/bootstrapGrafana.sh --v --params_file /tmp/grafana-setup.txt &>> /tmp/bootstrap.log\n",
                "/usr/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource GrafanaSqlite3Instance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "GrafanaServerName"
            }
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT90M"
        }
      }
    },
    "GrafanaAuroraInstance": {
      "Type": "AWS::EC2::Instance",
      "Condition": "UseAuroraRDS",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/tmp/Grafana-setup.txt": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "QuickStartS3URL|",
                      {
                        "Fn::FindInMap": [
                          "AWSInfoRegionMap",
                          {
                            "Ref": "AWS::Region"
                          },
                          "QuickStartS3URL"
                        ]
                      },
                      "\n",
                      "QSS3BucketName|",
                      {
                        "Ref": "QSS3BucketName"
                      },
                      "\n",
                      "QSS3KeyPrefix|",
                      {
                        "Ref": "QSS3KeyPrefix"
                      },
                      "\n",
                      "DatabasePass|",
                      {
                        "Ref": "MasterPassword"
                      },
                      "\n",
                      "DatabaseUser|",
                      {
                        "Ref": "MasterUser"
                      },
                      "\n",
                      "DBConnString|",
                      {
                        "Fn::GetAtt": [
                          "GrafanaDBCluster",
                          "Endpoint.Address"
                        ]
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000440",
                "owner": "root",
                "group": "root"
              },
              "/tmp/bootstrapGrafana.sh": {
                "source": {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::FindInMap": [
                          "AWSInfoRegionMap",
                          {
                            "Ref": "AWS::Region"
                          },
                          "QuickStartS3URL"
                        ]
                      },
                      {
                        "Ref": "QSS3BucketName"
                      },
                      {
                        "Ref": "QSS3KeyPrefix"
                      },
                      "Scripts/bootstrapGrafana.sh"
                    ]
                  ]
                },
                "mode": "000777",
                "owner": "root",
                "group": "root"
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "InstanceProfileGrafana"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "GrafanaAMINameMap",
                {
                  "Ref": "GrafanaAMIOS"
                },
                "Code"
              ]
            }
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "GrafanaServerSecurityGroup"
          },
          {
            "Ref": "GrafanaAgentsSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PrivateSubnetID1"
        },
        "InstanceType": {
          "Ref": "GrafanaInstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash \n",
                "cd /tmp \n",
                "curl -O https://bootstrap.pypa.io/get-pip.py\n",
                "python get-pip.py\n",
                "echo DEBUGPipInstalled &> /tmp/bootstrap.log\n",
                "pip install awscli\n",
                "curl -O https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                "gunzip aws-cfn-bootstrap-latest.tar.gz\n",
                "tar -xvf aws-cfn-bootstrap-latest.tar\n",
                "cd aws-cfn-bootstrap*\n",
                "python setup.py build\n",
                "python setup.py install\n",
                "yum install -y zip\n",
                "yum install -y unzip\n",
                "/usr/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource GrafanaAuroraInstance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "/tmp/bootstrapGrafana.sh --v --params_file /tmp/grafana-setup.txt &>> /tmp/bootstrap.log\n",
                "/usr/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource GrafanaAuroraInstance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "GrafanaServerName"
            }
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT90M"
        }
      },
      "DependsOn": "GrafanaDBInstance"
    }
  },
  "Outputs": {
    "GrafanaServerName": {
      "Value": {
        "Ref": "GrafanaServerName"
      },
      "Description": "Grafana Server Name"
    },
    "GrafanaSqlite3PrivateIPAddress": {
      "Condition": "UseLocalsqlite3",
      "Value": {
        "Fn::GetAtt": [
          "GrafanaSqlite3Instance",
          "PrivateIp"
        ]
      },
      "Description": "Grafana Instance private IP address that uses local Sqlite3"
    },
    "GrafanaAuroraPrivateIPAddress": {
      "Condition": "UseAuroraRDS",
      "Value": {
        "Fn::GetAtt": [
          "GrafanaAuroraInstance",
          "PrivateIp"
        ]
      },
      "Description": "Grafana Instance private IP address that uses Aurora Cluster"
    },
    "GrafanaSqlit3WebURL": {
      "Condition": "UseLocalsqlite3",
      "Value": {
        "Fn::GetAtt": [
          "GrafanaSqlite3LoadBalancer",
          "DNSName"
        ]
      },
      "Description": "Grafana Web  URL"
    },
    "GrafanaAuroraWebURL": {
      "Condition": "UseAuroraRDS",
      "Value": {
        "Fn::GetAtt": [
          "GrafanaAuroraLoadBalancer",
          "DNSName"
        ]
      },
      "Description": "Grafana Web  URL"
    }
  }
}





